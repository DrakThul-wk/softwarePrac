深度优先遍历类似于树的前序遍历，它的基本过程如下：
（1）从图的某个初始顶点出发，首先访问初始顶点；
（2）选择一个与顶点邻接且没有被访问过的顶点为初始顶点，再从此顶点出发进行深度优先遍历，直到图中与当前顶点邻接的所有
顶点都被访问过。

相应的伪代码如下：
int visited[MAXV] = {0};
void DFS(type *G, int v)
{
    visited[v] = 1;
    p = G->head;
    while (p != NULL) {
        if (visited[p->v] == 0) {
            DFS(G, p->v);
        }
        p = p->next;
    }
}